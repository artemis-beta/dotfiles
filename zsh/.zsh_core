# Setup Oh-My-ZSH
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="spaceship"
zstyle ':omz:update' mode auto
COMPLETION_WAITING_DOTS="true"
SPACESHIP_PROMPT_DEFAULT_PREFIX=" "
SPACESHIP_USER_PREFIX=""
plugins=(git pip docker vagrant ubuntu poetry gh command-not-found ansible gitignore rust screen sudo tldr emoji git-extras)
source $ZSH/oh-my-zsh.sh

# Shell options
HISTSIZE=1000
SAVEHIST=1000  # Save most-recent 1000 lines
HISTFILE=~/.zsh_history
setopt auto_cd
setopt rm_star_silent
export SHELL=$(which zsh)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Environment variables
export GOBIN=$HOME/.local/bin
export ANSIBLE_NOCOWS=1

# Setup Pyenv
if [ -d $HOME/.pyenv ]; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
  VIRTUAL_ENV_DISABLE_PROMPT=1
  plugins=(virtualenv pip)
fi


# Command overload
if which icdiff > /dev/null 2>&1; then
  alias diff='icdiff'
fi
if which nvim > /dev/null 2>&1; then
  alias vim="nvim"
fi
if which btop > /dev/null 2>&1; then
  alias top="btop"
fi
if which dockly > /dev/null 2>&1; then
  alias dockly="dockly -s $XDG_RUNTIME_DIR/docker.sock"
fi
if which lsd > /dev/null 2>&1; then
  alias ls="lsd"
fi
if which ncdu > /dev/null 2>&1; then
  alias du="ncdu"
fi
alias rm="rm --interactive=never"
alias map="telnet mapscii.me"

# Load Update Functions if on Debian
if [ -f $HOME/.zsh_update_apps ]; then
  source $HOME/.zsh_update_apps
fi

# Source Cargo if installed
if [ -d "$HOME/.cargo" ]; then
  . "$HOME/.cargo/env"
fi

# Setup NVM and npm
export NVM_DIR=$HOME/.nvm
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
nvm_installed=$(nvm list | head -n 1 | awk -F '[v.]' '{print $2}' | xargs)
echo $nvm_installed > $HOME/.nvmrc

# Setup FZF if installed
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
